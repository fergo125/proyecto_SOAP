/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package soap_client;
import java.util.Date;
import javax.xml.ws.BindingProvider;
import javax.swing.JOptionPane;
import ecci_gato.*;
import java.util.*;
/**
 *
 * @author Fergo
 */
public class Client_UI extends javax.swing.JFrame {

    /**
     * Creates new form Client_UI
     */
    
    private ECCIGatoPort port;
    private String[][] board;
    private String user_active = "";
    private String user_inactive = "";
    private String jugador1_name;
    private String jugador2_name;
    private Date start_time;
    private boolean cont;
    
    public Client_UI() {
       initComponents();
       ECCIGato service = new ECCIGato();
       port = service.getECCIGatoPort();
        board = new String[3][3];
       ((BindingProvider)port).getRequestContext().put(BindingProvider.SESSION_MAINTAIN_PROPERTY,true);
    }
    //Metodo para preparar un nuevo juego 
    private void set_game(){
        cont = false;
        start_button.setEnabled(true);
            scores_button.setEnabled(true);
            jugador1.setEnabled(true);
            jugador2.setEnabled(false);
            jugador1.setText("");
            jugador2.setText("");
            two_players_mode.setEnabled(true);
            
            board11.setEnabled(false);
            board12.setEnabled(false);
            board13.setEnabled(false);
            board21.setEnabled(false);
            board22.setEnabled(false);
            board23.setEnabled(false);
            board31.setEnabled(false);
            board32.setEnabled(false);
            board33.setEnabled(false);
            
            board11.setText("");
            board12.setText("");
            board13.setText("");
            board21.setText("");
            board22.setText("");
            board23.setText("");
            board31.setText("");
            board32.setText("");
            board33.setText("");
    }
    //Metodo que se encarga de iniciar un juego nuevo
    private void start_game(){
        String new_game_return = "";
        start_time = new Date();
        cont = true;
        try{
            new_game_return = port.newGame(jugador1_name, jugador2_name); 
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(this, e, "Error de conexion", JOptionPane.ERROR_MESSAGE);    
        }
        
        if("START".compareTo(new_game_return) != 0){
            JOptionPane.showMessageDialog(this, "Error al inicializar el juego", "Error", JOptionPane.ERROR_MESSAGE);
        }
        else{
            start_time = new Date();
            start_button.setEnabled(false);
            scores_button.setEnabled(false);
            jugador1.setEnabled(false);
            jugador2.setEnabled(false);
            two_players_mode.setEnabled(false);
            
            board11.setEnabled(true);
            board12.setEnabled(true);
            board13.setEnabled(true);
            board21.setEnabled(true);
            board22.setEnabled(true);
            board23.setEnabled(true);
            board31.setEnabled(true);
            board32.setEnabled(true);
            board33.setEnabled(true);
        }
        user_active = jugador1_name;
        user_inactive = jugador2_name;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator2 = new javax.swing.JSeparator();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        start_button = new javax.swing.JButton();
        scores_button = new javax.swing.JButton();
        jugador1 = new java.awt.TextField();
        jugador2 = new java.awt.TextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        two_players_mode = new javax.swing.JCheckBox();
        board12 = new javax.swing.JButton();
        board13 = new javax.swing.JButton();
        board11 = new javax.swing.JButton();
        board22 = new javax.swing.JButton();
        board23 = new javax.swing.JButton();
        board21 = new javax.swing.JButton();
        board32 = new javax.swing.JButton();
        board33 = new javax.swing.JButton();
        board31 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("GATO!");

        start_button.setText("Iniciar Juego");
        start_button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                start_buttonMouseClicked(evt);
            }
        });
        start_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                start_buttonActionPerformed(evt);
            }
        });

        scores_button.setText("Puntajes Altos");
        scores_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scores_buttonActionPerformed(evt);
            }
        });

        jugador1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jugador1ActionPerformed(evt);
            }
        });

        jugador2.setEnabled(false);
        jugador2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jugador2ActionPerformed(evt);
            }
        });

        jLabel2.setText("Jugador 1");

        jLabel3.setText("Jugador 2");

        two_players_mode.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                two_players_modeStateChanged(evt);
            }
        });
        two_players_mode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                two_players_modeActionPerformed(evt);
            }
        });

        board12.setToolTipText("");
        board12.setEnabled(false);
        board12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                board12ActionPerformed(evt);
            }
        });

        board13.setEnabled(false);
        board13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                board13ActionPerformed(evt);
            }
        });

        board11.setEnabled(false);
        board11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                board11ActionPerformed(evt);
            }
        });

        board22.setEnabled(false);
        board22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                board22ActionPerformed(evt);
            }
        });

        board23.setEnabled(false);
        board23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                board23ActionPerformed(evt);
            }
        });

        board21.setEnabled(false);
        board21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                board21ActionPerformed(evt);
            }
        });

        board32.setEnabled(false);
        board32.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                board32ActionPerformed(evt);
            }
        });

        board33.setEnabled(false);
        board33.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                board33ActionPerformed(evt);
            }
        });

        board31.setEnabled(false);
        board31.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                board31ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(board11, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(board21, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(board31, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(board12, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(board13, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(board22, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(board23, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(board32, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(board33, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jugador1, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(two_players_mode))
                            .addComponent(jugador2, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(scores_button))
                        .addGap(41, 41, 41))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(94, 94, 94)
                        .addComponent(start_button))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(166, 166, 166)
                        .addComponent(jLabel1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel2))
                    .addComponent(two_players_mode))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jugador2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jugador1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(start_button)
                            .addComponent(scores_button))))
                .addGap(41, 41, 41)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(board12, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(board13, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(board11, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(board21, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(board22, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(board23, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(board32, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(board33, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(board31, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(62, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 409, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 11, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    //Metodo del boton IniciarJuego que se encarga de crear una nueva partida
    private void start_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_start_buttonActionPerformed
        jugador1_name = jugador1.getText();
        jugador2_name = jugador2.getText();
        if("".compareTo(jugador1_name) != 0 && jugador1_name.compareTo(jugador2_name) != 0){
            if(!two_players_mode.isSelected()){
                jugador2_name = "";
                start_game();
            }
            else{
                if("".compareTo(jugador2_name) == 0){
                   JOptionPane.showMessageDialog(this, "Por favor escriba un nombre para el Jugador 2", "Error", JOptionPane.ERROR_MESSAGE);
                }
                else{
                   start_game();
                }
            } 
        }
    }//GEN-LAST:event_start_buttonActionPerformed
    //Metodo para intercambiar usuarios activos
    private void switch_user(){
        String user = user_active;
        user_active = user_inactive;
        user_inactive = user;
    }
    //Metodo que se conecta con el web service para realizar un nuevo movimiento
    private void makemove(int x, int y){
        String str = port.makeMove(x, y, user_active);
        String[] status = str.split(":");
        String match_state;
        if("".compareTo(user_active) == 0){
            invalidate_button(Integer.parseInt(status[0]),Integer.parseInt(status[1]),"COMPU");
            match_state = status[2];
        }
        else{
            if("COOL".compareTo(status[0]) == 0){
                invalidate_button(x,y,user_active);
            }
            match_state = status[1];
        }
        if("WON".compareTo(match_state) == 0){
            cont=false;
            if("".compareTo(user_active) != 0 ){
                Date end_time = new Date();    
                long time_delta = end_time.getTime() - start_time.getTime();
                int time = (int)(time_delta/1000); 
                JOptionPane.showMessageDialog(this, "Ganador: "+user_active +"Tiempo: "+time+"s", "FIN DEL JUEGO", JOptionPane.INFORMATION_MESSAGE);
                port.newScore(user_active, time);
                
            }
            else{
                JOptionPane.showMessageDialog(this, "PERDEDOR","FIN DEL JUEGO" , JOptionPane.INFORMATION_MESSAGE); 
            }
            set_game();
        }
       if("TIE".compareTo(match_state) == 0){
            JOptionPane.showMessageDialog(this, "FIN DEL JUEGO", "Ganador: "+user_active, JOptionPane.INFORMATION_MESSAGE);
            set_game();
        }
       if("NORMAL".compareTo(match_state) == 0){
           switch_user();
       }
       
       if("".compareTo(user_active) == 0 && cont){
           int sx = -1;
           int sy = -1;
           makemove(sx,sy);
       }
    }
    
    //Metodo que se encarga de invalidar uno de los botones ya selecionados cuando se hace una movida
    private void invalidate_button(int x, int y,String name){
        if(x == 0){
            if(y == 0){
                board11.setEnabled(false);
                board11.setText(name);
            }
            if(y == 1){
                board12.setEnabled(false);
                board12.setText(name);
            }
            if(y == 2){
                board13.setEnabled(false);
                board13.setText(name);
            }
        }
        if(x == 1){
            if(y == 0){
                board21.setEnabled(false);
                board21.setText(name);
            }
            if(y == 1){
                board22.setEnabled(false);
                board22.setText(name);
            }
            if(y == 2){
                board23.setEnabled(false);
                board23.setText(name);
            }
        }
        if(x == 2){
            if(y == 0){
                board31.setEnabled(false);
                board31.setText(name);
            }
            if(y == 1){
                board32.setEnabled(false);
                board32.setText(name);
            }
            if(y == 2){
                board33.setEnabled(false);
                board33.setText(name);
            }
        }
    }
    //Boton que se encarga de desplegar los puntajes en pantalla
    private void scores_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scores_buttonActionPerformed
        String scores = port.leaderboards();
        String[] scores_split = scores.split(",");
        String resultados = "Nombre Puntaje \n";
        for(int i = 0; i<scores_split.length; ++i){
            String[] element = scores_split[i].split(":");
            resultados= resultados + element[0] +" "+ element[1]+ "s"+ "\n";
        }
        JOptionPane.showMessageDialog(this, resultados, "Resultados", JOptionPane.PLAIN_MESSAGE);
    }//GEN-LAST:event_scores_buttonActionPerformed

    private void jugador1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jugador1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jugador1ActionPerformed

    private void jugador2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jugador2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jugador2ActionPerformed

    private void two_players_modeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_two_players_modeActionPerformed
        if(two_players_mode.isSelected()){
            jugador2.setEnabled(true);
        }
        else{
            jugador2.setEnabled(false);
            jugador2.setText("");
        }
    }//GEN-LAST:event_two_players_modeActionPerformed
    //Cada boton del tablero llama al metodo makemove de con sus respectivas coordenadas
    private void board11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_board11ActionPerformed
        makemove(0,0);
    }//GEN-LAST:event_board11ActionPerformed

    private void board12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_board12ActionPerformed
       makemove(0,1);
    }//GEN-LAST:event_board12ActionPerformed

    private void two_players_modeStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_two_players_modeStateChanged
        
    }//GEN-LAST:event_two_players_modeStateChanged

    private void start_buttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_start_buttonMouseClicked
        
    }//GEN-LAST:event_start_buttonMouseClicked

    private void board21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_board21ActionPerformed
        // TODO add your handling code here:
         makemove(1,0);
    }//GEN-LAST:event_board21ActionPerformed

    private void board13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_board13ActionPerformed
         makemove(0,2);
    }//GEN-LAST:event_board13ActionPerformed

    private void board22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_board22ActionPerformed
         makemove(1,1);
    }//GEN-LAST:event_board22ActionPerformed

    private void board23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_board23ActionPerformed
         makemove(1,2);
    }//GEN-LAST:event_board23ActionPerformed

    private void board31ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_board31ActionPerformed
         makemove(2,0);
    }//GEN-LAST:event_board31ActionPerformed

    private void board32ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_board32ActionPerformed
         makemove(2,1);
    }//GEN-LAST:event_board32ActionPerformed

    private void board33ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_board33ActionPerformed
         makemove(2,2);
    }//GEN-LAST:event_board33ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Client_UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Client_UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Client_UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Client_UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Client_UI().setVisible(true);
            }
        });
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton board11;
    private javax.swing.JButton board12;
    private javax.swing.JButton board13;
    private javax.swing.JButton board21;
    private javax.swing.JButton board22;
    private javax.swing.JButton board23;
    private javax.swing.JButton board31;
    private javax.swing.JButton board32;
    private javax.swing.JButton board33;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator2;
    private java.awt.TextField jugador1;
    private java.awt.TextField jugador2;
    private javax.swing.JButton scores_button;
    private javax.swing.JButton start_button;
    private javax.swing.JCheckBox two_players_mode;
    // End of variables declaration//GEN-END:variables
}
